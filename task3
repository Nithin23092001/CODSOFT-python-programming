##Rock-Paper-Scissors Game

import random

def get_computer_choice():
    """Generate a random choice for the computer."""
    return random.choice(["rock", "paper", "scissors"])

def determine_winner(user_choice, computer_choice):
    """Determine the winner based on the user's and computer's choices."""
    if user_choice == computer_choice:
        return "tie"
    elif (user_choice == "rock" and computer_choice == "scissors") or \
         (user_choice == "scissors" and computer_choice == "paper") or \
         (user_choice == "paper" and computer_choice == "rock"):
        return "user"
    else:
        return "computer"

def display_result(user_choice, computer_choice, result):
    """Display the choices and the result of the round."""
    print(f"\nYou chose: {user_choice}")
    print(f"Computer chose: {computer_choice}")
    if result == "tie":
        print("It's a tie!")
    elif result == "user":
        print("You win!")
    else:
        print("You lose!")

def main():
    print("Welcome to the Rock-Paper-Scissors Game!")
    print("Rules: Rock beats Scissors, Scissors beats Paper, Paper beats Rock.\n")

    user_score = 0
    computer_score = 0

    while True:
        user_choice = input("Choose rock, paper, or scissors (or 'quit' to stop): ").lower()
        if user_choice == "quit":
            print("\nThank you for playing! Final scores:")
            print(f"Your Score: {user_score} | Computer Score: {computer_score}")
            break

        if user_choice not in ["rock", "paper", "scissors"]:
            print("Invalid choice. Please choose rock, paper, or scissors.\n")
            continue

        computer_choice = get_computer_choice()

        result = determine_winner(user_choice, computer_choice)

        if result == "user":
            user_score += 1
        elif result == "computer":
            computer_score += 1

        display_result(user_choice, computer_choice, result)

        print(f"Current Scores - You: {user_score} | Computer: {computer_score}\n")

if __name__ == "__main__":
    main()
